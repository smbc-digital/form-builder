@using form_builder.Helpers
@model form_builder.Models.Elements.Element
@{
    var hintId = $"{Model.Properties.QuestionId}-hint";

    var hoursid = $"{Model.Properties.QuestionId}-hours";
    var minutesid = $"{Model.Properties.QuestionId}-minutes";

    var amid =  $"{Model.Properties.QuestionId}-am";
    var pmid =  $"{Model.Properties.QuestionId}-pm";
    
    var errorId = $"{Model.Properties.QuestionId}-error";
    var classes = new string[] { "input-time" };
}

@await Html.BeginFieldSet(Model, classes)
<legend>
    <label @Model.WriteOptional()>@Model.Properties.Label</label>
    @if (Model.Properties?.Optional ?? true)
    {
        <p class="optional">(optional)</p>
    }
</legend>
<p id="@hintId">@Model.Properties.Hint</p>
<div>
    <label for="@hoursid">
        Hours
    </label>
    @Html.TextBox(hoursid, Model.Properties.Hours, new { maxLength = "2", type = "text"})
</div>
<div style="text-align:left; width: 25px; font-weight: 500">:</div>
<div>
    <label for="@minutesid">
        Minutes
    </label>
    @Html.TextBox(minutesid, Model.Properties.Minutes, new { maxLength = "2", type = "text"})
</div>

<div class="input-radio-container">
    @Html.RadioButton(amid, "am")
    <label for="@amid">AM</label>
</div>
<div class="input-radio-container">
    @Html.RadioButton(pmid, "pm")
    <label for="@pmid">PM</label>
</div>

@if (!Model.IsValid)
{
    <p class="input-error-content" id="@errorId">@Model.ValidationMessage</p>
}
@await Html.EndFieldSet()
