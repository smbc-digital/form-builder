@model form_builder.Models.Element
@{
    var hintId = $"{Model.Properties.QuestionId}-hint";
    var errorId = $"{Model.Properties.QuestionId}-error";
}

<label @Model.WriteOptional() for="@Model.Properties.QuestionId">@Model.Properties.Label</label>

@if (Model.Properties?.Optional ?? true)
{
    <p class="optional">(optional)</p>
}

@if (!string.IsNullOrEmpty(Model.Properties.Hint.Trim()))
{
    <p class="description" id=@hintId>@Model.Properties.Hint</p>
}

<label for="addressManualLine1">Address line 1</label>
<input name="addressManualLine1" id="addressManualLine1" type="text" />
<label class="optional" for="addressManualLine2">Address line 2</label>
<p class="optional">(optional)</p>
<input name="addressManualLine2" id="addressManualLine2" type="text" />
<label for="addressManualTown">Town</label>
<input name="addressManualTown" id="addressManualTown" type="text" />
<label for="addressManualPostcode">Postcode</label>
<input name="addressManualPostcode" id="addressManualPostcode" type="text" />


@if (!Model.IsValid)
{
    var validationMessage = string.IsNullOrEmpty(Model.Properties.CustomValidationMessage) ? Model.ValidationMessage : Model.Properties.CustomValidationMessage;
    <p class="input-error-content" id="@errorId">@validationMessage</p>
}
