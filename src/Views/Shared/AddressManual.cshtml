@using form_builder.Models.Elements;
@model form_builder.ViewModels.ElementViewModel;
@{    
    var errorMessages = Model.Element.ValidationMessage.Split(", ");
    if(errorMessages.Length < 3)
    {
        errorMessages = new string[]{string.Empty,string.Empty, string.Empty };
    }

    var showLine1Validation = !Model.Element.IsValid && !string.IsNullOrEmpty(errorMessages[0]);
    var line1Elements = Model.Element.GenerateElementProperties(errorMessages[0], @Model.Element.GetCustomErrorId(AddressManualConstants.ADDRESS_LINE_1));
    line1Elements.Add("class", "govuk-input");
    if(!Model.Element.IsValid && !string.IsNullOrEmpty(errorMessages[0]))
    {
        line1Elements["class"] += " govuk-input--error";
    }
    
    var line2Elements = Model.Element.GenerateElementProperties();
    line2Elements.Add("class", "govuk-input");

    var showTownValidation = !Model.Element.IsValid && !string.IsNullOrEmpty(errorMessages[1]);
    var townElements = Model.Element.GenerateElementProperties(errorMessages[1], @Model.Element.GetCustomErrorId(AddressManualConstants.TOWN));
    townElements.Add("class", "govuk-input");
    if(!Model.Element.IsValid && !string.IsNullOrEmpty(errorMessages[1]))
    {
        townElements["class"] += " govuk-input--error";
    }
    
    var showPostcodeValidation = !Model.Element.IsValid && !string.IsNullOrEmpty(errorMessages[2]);
    var postcodeElements = Model.Element.GenerateElementProperties(errorMessages[2], @Model.Element.GetCustomErrorId(AddressManualConstants.POSTCODE));
    postcodeElements.Add("class", "govuk-input--width-10 govuk-input");

    if(!Model.Element.IsValid && !string.IsNullOrEmpty(errorMessages[2]))
    {
        postcodeElements["class"] += " govuk-input--error";
    }
}

@Html.Hidden(@Model.Element.GetCustomItemId("postcode"), Model.Element.Properties.Value)

<fieldset class="govuk-fieldset" @Model.Element.GenerateFieldsetProperties()>
    <legend class="govuk-fieldset__legend govuk-fieldset__legend--xl">
        <h1 class="govuk-fieldset__heading">
            @Model.Element.Properties.AddressManualLabel
        </h1>
    </legend>

    <div class="govuk-body">
        <h2 class="govuk-heading-m govuk-!-margin-bottom-2">Postcode </h2>
        <strong class="govuk-!-margin-right-3">@Model.Element.Properties.Value</strong> <a class="govuk-link" href="@Model.ManualAddressURL">Change</a>
    </div>

    @if (Model.Element.Properties.DisplayNoResultsIAG)
    {
        <section class="govuk-inset-text">
            No address found at the postcode. Enter your address manually.
        </section>
    }

    @if (!string.IsNullOrEmpty(Model.Element.Properties.AddressManualHint.Trim()))
    {
        <p class="govuk-hint" id=@Model.Element.HintId>@Model.Element.Properties.AddressManualHint</p>
    }

    <div class="govuk-form-group @(showLine1Validation ? " govuk-form-group--error" : string.Empty)">
        <label class="govuk-label" for=@Model.Element.GetCustomItemId(AddressManualConstants.ADDRESS_LINE_1)>Address line 1</label>
        @if (showLine1Validation)
        {
            <span class="govuk-error-message" id="@Model.Element.GetCustomErrorId(AddressManualConstants.ADDRESS_LINE_1)">
                <span class="govuk-visually-hidden">Error:</span> @errorMessages[0]
            </span>
        }
        @Html.TextBox(@Model.Element.GetCustomItemId(AddressManualConstants.ADDRESS_LINE_1), Model.Element.Properties.AddressManualAddressLine1, line1Elements)

    </div>

    <div class="govuk-form-group">
        <label class="govuk-label" class="optional" for=@Model.Element.GetCustomItemId(AddressManualConstants.ADDRESS_LINE_2)>Address line 2
            <span>(optional)</span>
        </label>    
        @Html.TextBox(@Model.Element.GetCustomItemId(AddressManualConstants.ADDRESS_LINE_2), Model.Element.Properties.AddressManualAddressLine2, line2Elements)
    </div>

    <div class="govuk-form-group @(showTownValidation ? " govuk-form-group--error" : string.Empty)">
        <label class="govuk-label" for=@Model.Element.GetCustomItemId(AddressManualConstants.TOWN)>Town</label>
        @if (showTownValidation)
        {
            <span class="govuk-error-message" id="@Model.Element.GetCustomItemId(AddressManualConstants.TOWN)">
                <span class="govuk-visually-hidden">Error:</span> @errorMessages[1]
            </span>
        }
        @Html.TextBox(@Model.Element.GetCustomItemId(AddressManualConstants.TOWN), Model.Element.Properties.AddressManualAddressTown, townElements)
    </div>

    <div class="govuk-form-group @(showPostcodeValidation ? " govuk-form-group--error" : string.Empty)">
        <label class="govuk-label" for=@Model.Element.GetCustomItemId(AddressManualConstants.POSTCODE)>Postcode</label>
        @if (showPostcodeValidation)
        {
            <span class="govuk-error-message" id="@Model.Element.GetCustomItemId(AddressManualConstants.POSTCODE)">
                <span class="govuk-visually-hidden">Error:</span> @errorMessages[2]
            </span>
        }
        @Html.TextBox(@Model.Element.GetCustomItemId(AddressManualConstants.POSTCODE), Model.Element.Properties.AddressManualAddressPostcode, postcodeElements)
    </div>
</fieldset>