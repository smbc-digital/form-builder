@model form_builder.Models.Elements.Element
@{
    var hintId = $"{Model.Properties.QuestionId}-hint";
    var errorId = $"{Model.Properties.QuestionId}-error";

    var max = Model.Properties.Max ?? string.Empty;
    var min = Model.Properties.Min ?? string.Empty;
    var id = Model.Properties.QuestionId;
    
    var elements = Model.GenerateElementProperties();
    if(!Model.IsValid)
    {
        elements.Add("class", "govuk-input govuk-input--error");
    }
    else{
        elements.Add("class", "govuk-input");
    }
}

<div class="govuk-form-group @(!Model.IsValid ? " govuk-form-group--error" : string.Empty)">
    @if(Model.Properties.LabelAsH1) {
        <h1 class="govuk-label-heading">
            <label class="govuk-label govuk-label--xl" @Model.WriteOptional() for="@Model.Properties.QuestionId">@Model.Properties.Label
                @if (Model.Properties.Optional)
                {
                    <span>(optional)</span>
                }
            </label>
        </h1>
    } else {
        <label class="govuk-label" @Model.WriteOptional() for="@Model.Properties.QuestionId">@Model.Properties.Label
        @if (Model.Properties.Optional)
        {
            <span>(optional)</span>
        }    
        </label>
    }

    @if (!string.IsNullOrEmpty(Model.Properties.Hint.Trim()))
    {
        <span class="govuk-hint" id=@hintId>@Model.Properties.Hint</span>
    }
    
    @if (!Model.IsValid)
    {
        <span id="passport-issued-error" class="govuk-error-message">
        <span class="govuk-visually-hidden">Error:</span> @Model.ValidationMessage
        </span>
    }

    @if (Model.Properties.Numeric)
    {
        <input type="number" id="@id" name="@id" max="@max" min="@min" value="@Model.Properties.Value" maxlength="@Model.Properties.MaxLength.ToString()" class="govuk-input @(!Model.IsValid ? " govuk-input--error" : string.Empty)" />
    }
    else
    {
        @Html.TextBox(id, Model.Properties.Value, elements)
    }
</div>