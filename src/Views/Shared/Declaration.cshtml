@using form_builder.Helpers
@model form_builder.Models.Elements.Element
@{
    var hintId = $"{Model.Properties.QuestionId}-hint";
    var errorId = $"{Model.Properties.QuestionId}-error";
    var itemName = $"{Model.Properties.QuestionId}";
    var itemId = $"{Model.Properties.QuestionId}";
    var hint = Model.Properties.Hint;
}

@await Html.BeginFieldSet(Model)

    <legend>
        @if (Model.Properties.LegendAsH1)
        {
            <h1>
                @Model.Properties.Label
                @if (Model.Properties.Optional)
                {
                    <span class="optional">(optional)</span>
                }

            </h1>
        }
        else
        {
            @Model.Properties.Label
            @if (Model.Properties.Optional)
            {
                <span class="optional">(optional)</span>
            }
        }
    </legend>

@if (!string.IsNullOrEmpty(Model.Properties.Hint))
{
    <p id=@hintId>@Html.Raw(Model.Properties.Hint)</p>
}
   

<div class="input-checkbox-container">
    @if (Model.Properties.Checked)
    {
        <input type="checkbox" value="true" name="@itemName" id="@itemId" aria-describedby="@hintId" checked />
    }
    else if (!string.IsNullOrEmpty(Model.Properties.Value))

    {
        <input type="checkbox" value="true" name="@itemName" id="@itemId" aria-describedby="@hintId" checked />
    }
    else
    {
        <input type="checkbox" value="true" name="@itemName" id="@itemId" aria-describedby="@hintId" />
    }
    <label for="@itemId" @Model.WriteOptional()>@Model.Properties.Text</label>
</div>

    @if (!Model.IsValid)
    {
        {
            var validationMessage = string.IsNullOrEmpty(Model.Properties.CustomValidationMessage) ? Model.ValidationMessage : Model.Properties.CustomValidationMessage;

            <p class="input-error-content" id="@errorId">@validationMessage</p>
        }
    }

    @await Html.EndFieldSet()
