@using form_builder.Constants;
@model form_builder.Models.Elements.Booking

<div class="govuk-form-group @(!Model.IsValid ? "govuk-form-group--error" : string.Empty)">
    @Html.Hidden(Model.GetCustomItemId(BookingConstants.RESERVED_BOOKING_DATE), Model.ReservedBookingDate)
    @Html.Hidden(Model.GetCustomItemId(BookingConstants.RESERVED_BOOKING_ID), Model.ReservedBookingId)

    <partial name="LabelH1" />

    <partial name="InsetText" model="@Model.Properties.IAG" />

    @if (@Model.IsAppointmentTypeFullDay)
    {
        <partial name="InsetText" model="@Model.AppointmentTypeFullDayIAG" />
    }

    @if(@Model.DisplayNextAvailableAppointmentIAG){
         <partial name="InsetText" model="@Model.Properties.NextAvailableAppointment" />
    }

    <partial name="Hint" />

    <partial name="Error" />

    @if(@Model.DisplayPreviousMonthArrow){
        <button type="submit"
                name="@BookingConstants.BOOKING_MONTH_REQUEST"
                value="@Model.PreviousSelectableMonth"
                formaction="@Model.MonthSelectionPostUrl"
                class="govuk-button smbc-button--link">
            Previous Month
        </button>
    }
   
    <p class="smbc-body">@Model.CurrentSelectedMonthText</p>

    @if(@Model.DisplayNextMonthArrow){
        <button type="submit"
                name="@BookingConstants.BOOKING_MONTH_REQUEST"
                value="@Model.NextSelectableMonth"
                formaction="@Model.MonthSelectionPostUrl"
                class="govuk-button smbc-button--link">
            Next Month
        </button>
    }

    @Html.DropDownList(Model.BookingDateQuestionId, Model.SelectList)
</div>