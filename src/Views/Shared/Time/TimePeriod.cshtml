@using form_builder.Utils.Extesions
@model form_builder.Models.Time.TimePeriod
@{
    var additionalMorning = Model.Appointments.Count % 3;
}

@functions{
    public string GetClass(int value){
        switch(value % 3){
            case 0: 
                return "smbc-time__time__label--left";
            case 1: 
                return "smbc-time__time__label--centre";
            default:
                return "smbc-time__time__label--right";
        }
    }
}

<div class="smbc-time__body smbc-time__body__conditional smbc-time__body__conditional--hidden" id="@Model.Id">
    @if(!Model.HasAppointments){
        <p class="smbc-body">No appointments in the @Model.TimeOfDay</p>
    } else {
            @for (int i = 0; i < Model.Appointments.Count; i++)
            {
                var startTime = Model.Appointments[i].StartTime;
                var endTime = Model.Appointments[i].EndTime;
                <div class="smbc-time__time">
                    <input 
                        class="smbc-time__time__input" 
                        type='radio' 
                        @(Model.CurrentValue == @Model.Value(startTime).ToString() ? "checked" : string.Empty)  
                        value="@Model.Value(startTime)|@Model.Value(endTime)" 
                        name='@Model.Id' 
                        id="@Model.Value(startTime)"/>
                    <label class="smbc-time__time__label @GetClass(i)" for="@Model.Value(startTime)">@Model.Value(startTime).ToTimeFormat()</label>
                </div>
            }
            @for (int i = 1; i < additionalMorning; i++)
            {
                <div class="smbc-time__time">
                </div>
            }
    }
</div>