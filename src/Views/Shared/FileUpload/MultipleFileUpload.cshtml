@model MultipleFileUpload
@{
    var sizeValidationError = $"{Model.QuestionId}-fileSizeError";
    var elements = Model.GenerateElementProperties();
    var baseCssClasses = "smbc-file-upload govuk-!-margin-bottom-5 govuk-!-display-block";
    elements.Add("class", !Model.IsValid
        ? $"{baseCssClasses} govuk-input--error smbc-input--file-error "
        : baseCssClasses);
    var uploadButtonCss = Model.DisplaySubmitButton ? "govuk-button govuk-button--secondary" : "govuk-button";
}

<partial name="LabelH1" />

<partial name="InsetText" model="Model.Properties.IAG" />

<p class="smbc-body">You can upload @Model.AllowFileTypeText.</p>
<p class="smbc-body">The maximum individual file size is @Model.MaxFileSizeText.</p>
<p class="smbc-body">The total size of all your added files must not be more than @Model.MaxCombinedFileSizeText.</p>

<partial name="Hint" />

@if (Model.CurrentFilesUploaded.Any())
{
    <h2 class="govuk-heading-m">Files uploaded</h2>
    <table class="govuk-table">
        <tbody class="govuk-table__body">
            @foreach (var file in Model.CurrentFilesUploaded)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell smbc-!-font-word-break smbc-!-width-90">@file</td>
                    <td class="govuk-table__cell smbc-!-width-10">
                        <button type="submit"
                                name="@FileUploadConstants.FILE_TO_DELETE"
                                value="@file"
                                class="govuk-button smbc-button--link smbc-!-alignment-right">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="govuk-form-group @(!Model.IsValid ? "govuk-form-group--error" : string.Empty)" id="multiple-file-upload-form-group">
    <partial name="Error" />

    <span class="govuk-error-message" id="@sizeValidationError" style="display: none">
        <span class="govuk-visually-hidden" Error:></span>
    </span>

    @Html.TextBox(Model.QuestionId, Model.Properties.Value, elements)

</div>

<button data-prevent-double-click="true"
        data-disable-on-click=true
        class="@uploadButtonCss"
        id="upload"
        @(Model.DisplaySubmitButton ? "aria-describedby=upload-information" : string.Empty)
        data-module="govuk-button">
    @ButtonConstants.UPLOAD_FILES_TEXT
</button>

@if (Model.CurrentFilesUploaded.Any() && Model.Properties.DisplayReCaptcha)
{
    <partial name="Recaptcha" model="Model.IsModelStateValid" />
}

@if (Model.DisplaySubmitButton)
{
    <span id="upload-information" aria-live="polite" class="govuk-visually-hidden">Upload button is currently enabled</span>
    <button data-prevent-double-click="true"
            data-disable-on-click=true
            class="govuk-button govuk-!-display-block"
            id="@Model.QuestionId-SubmitButton"
            data-module="govuk-button"
            name="@ButtonConstants.SUBMIT"
            value="@ButtonConstants.SUBMIT">
        @Model.SubmitButtonText
    </button>
}