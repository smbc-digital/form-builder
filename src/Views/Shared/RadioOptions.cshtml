@using form_builder.Helpers
@model form_builder.Models.Elements.Element

@using form_builder.Enum;
@{
	var elements = Model.GenerateElementProperties();

	var baseCssClasses = "govuk-input";

	switch (Model.Properties.Width)
	{
		case ESize.Small:
			baseCssClasses += " govuk-input--width-3";
			break;

		case ESize.Medium:
			baseCssClasses += " govuk-input--width-5";
			break;

		case ESize.Large:
			baseCssClasses += " govuk-input--width-10";
			break;

		case ESize.ExtraLarge:
			baseCssClasses += " govuk-input--width-20";
			break;
	}

	elements.Add("class", !Model.IsValid
		? $"{baseCssClasses} govuk-input--error"
		: baseCssClasses);
}

    <div class="govuk-radios@(Model.Properties.Options.Any(_ => _.HasConditionalElement) ? " govuk-radios--conditional" : "")" data-module="govuk-radios">
        @for (var i = 0; i < Model.Properties.Options.Count; i++) {
            var strongLabel = Model.Properties.Options[i].HasHint ? "govuk-label--s" : null;

            @if (Model.Properties.Options[i].HasDivider) {
                <div class="govuk-radios__divider">@Model.Properties.Options[i].Divider</div>
            }

            <div class="govuk-radios__item">
                <input class="govuk-radios__input"
                       type="radio"
                       value="@Model.Properties.Options[i].Value"
                       name="@Model.QuestionId"
                       id="@Model.GetListItemId(i)"
                       @(Model.Properties.Options[i].HasHint ? $"aria-describedby={Model.GetListItemHintId(i)}" : string.Empty)
                       @(Model.Properties.Checked || Model.Properties.Value.Contains(Model.Properties.Options[i].Value) ? "checked" : string.Empty)
                       data-aria-controls="conditional-@i" />

                <label class="govuk-label govuk-radios__label @strongLabel"
                       for="@Model.GetListItemId(i)">
                    @Html.Raw(Model.Properties.Options[i].Text)
                </label>

            </div>

            @if (Model.Properties.Options[i].HasHint) {
                <span class="govuk-hint govuk-radios__hint" id="@Model.GetListItemHintId(i)">@Html.Raw(Model.Properties.Options[i].Hint)</span>
            }

            //TODO -- Possibly redundant
            @if (Model.Properties.Options[i].HasConditionalElement && Model.Properties.Options[i].ConditionalElement != null) {
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-@i">
                    <partial model=Model.Properties.Options[i].ConditionalElement name="@Model.Properties.Options[i].ConditionalElement.Type" />
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.Properties.Options[i].ConditionalElementId)) {
                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-@i">
                    ID=@Model.Properties.Options[i].ConditionalElementId
                </div>
            }
        }
    </div>