@model form_builder.Models.Elements.Element

@using form_builder.Enum;
@{
	var elements = Model.GenerateElementProperties();

	var baseCssClasses = "govuk-input";

	switch (Model.Properties.Width)
	{
		case ESize.Small:
			baseCssClasses += " govuk-input--width-3";
			break;

		case ESize.Medium:
			baseCssClasses += " govuk-input--width-5";
			break;

		case ESize.Large:
			baseCssClasses += " govuk-input--width-10";
			break;

		case ESize.ExtraLarge:
			baseCssClasses += " govuk-input--width-20";
			break;
	}

	elements.Add("class", !Model.IsValid
		? $"{baseCssClasses} govuk-input--error"
		: baseCssClasses);
}

<div class="govuk-radios govuk-radios--conditional" data-module="govuk-radios">
	@for (var i = 0; i < Model.Properties.Options.Count; i++)
	{
		var strongLabel = Model.Properties.Options[i].HasHint ? "govuk-label--s" : null;

		@if (Model.Properties.Options[i].HasDivider)
		{
			<div class="govuk-radios__divider">@Model.Properties.Options[i].Divider</div>
		}

		<div class="govuk-radios__item">
			<input class="govuk-radios__input"
				   type="radio"
				   value="@Model.Properties.Options[i].Value"
				   name="@Model.QuestionId"
				   id="@Model.GetListItemId(i)"
				   @(Model.Properties.Options[i].HasHint ? $"aria-describedby={Model.GetListItemHintId(i)}" : string.Empty)
				   @(Model.Properties.Checked || Model.Properties.Value.Contains(Model.Properties.Options[i].Value) ? "checked" : string.Empty)
				   data-aria-controls="conditional-@i" />

			<label class="govuk-label govuk-radios__label @strongLabel"
				   for="@Model.GetListItemId(i)">
				@Html.Raw(Model.Properties.Options[i].Text)
			</label>

			@if (Model.Properties.Options[i].HasHint)
			{
				<span class="govuk-hint govuk-radios__hint" id="@Model.GetListItemHintId(i)">@Html.Raw(Model.Properties.Options[i].Hint)</span>
			}

			@if (Model.Properties.Options[i].HasConditionalElement)
			{
				@*@if (@Model.Properties.Options[i].ConditionalElement.Type == EElementType.Textbox)
				{
					<div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-@i">
						<div class="govuk-form-group @(!Model.Properties.Options[i].ConditionalElement.IsValid ? "govuk-form-group--error" : string.Empty)">

							@if (!string.IsNullOrEmpty(Model.Properties.Options[i].ConditionalElement.Properties.Label))
							{
								<label class="govuk-label @(Model.Properties.Options[i].ConditionalElement.Properties.StrongLabel ? "govuk-label--m" : string.Empty)" for="@Model.Properties.Options[i].ConditionalElement.QuestionId">
									@Model.Properties.Options[i].ConditionalElement.Properties.Label
									@if (Model.Properties.Options[i].ConditionalElement.Properties.Optional && !Model.Properties.Options[i].ConditionalElement.Properties.HideOptionalText)
									{
										<span class="smbc-body">(optional)</span>
									}
								</label>
							}

							@if (!string.IsNullOrEmpty(Model.Properties.Options[i].ConditionalElement.Properties.IAG))
							{
								<div class="govuk-inset-text">
									@Html.Raw(Model.Properties.Options[i].ConditionalElement.Properties.IAG)
								</div>
							}

							@if (Model.Properties.Options[i].ConditionalElement.DisplayHint && !string.IsNullOrEmpty(Model.Properties.Options[i].ConditionalElement.Hint))
							{
								<span class="govuk-hint" id=@Model.Properties.Options[i].ConditionalElement.HintId>@Html.Raw(Model.Properties.Options[i].ConditionalElement.Hint)</span>
							}

							@if (!Model.Properties.Options[i].ConditionalElement.IsValid)
							{
								var viewModel = new form_builder.ViewModels.ErrorViewModel
								{
									IsValid = Model.Properties.Options[i].ConditionalElement.IsValid,
									Message = Model.Properties.Options[i].ConditionalElement.ValidationMessage,
									Id = Model.Properties.Options[i].ConditionalElement.ErrorId
								};

								@if (!Model.Properties.Options[i].ConditionalElement.IsValid)
								{
									<span class="smbc-error-message">
										<span class="govuk-visually-hidden">Error:</span>
									</span>
								}
							}

							@Html.TextBox(Model.Properties.Options[i].ConditionalElement.QuestionId, Model.Properties.Options[i].ConditionalElement.Properties.Value, elements)
						</div>
					</div>
				}*@

			}

		</div>
	}
</div>