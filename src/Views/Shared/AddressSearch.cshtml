@using form_builder.Models.Elements;
@model form_builder.ViewModels.ElementViewModel
@{
    var elementProperties = Model.Element.GenerateElementProperties();
    elementProperties.Add("autocomplete", "postal-code");
    elementProperties.Add("class", "govuk-input govuk-input--width-10");
}

<div class="govuk-form-group @(!Model.Element.IsValid ? "govuk-form-group--error" : string.Empty)">
    <h1 class="govuk-heading-xl govuk-!-margin-bottom-4">
        @Model.Element.Properties.AddressLabel
    </h1>

    @if (@Model.Element.Properties.StockportPostcode == true)
    {
        <section class="govuk-inset-text">
            <p>@Model.Element.Properties.AddressIAG</p>
        </section>
    }
@* TODO: Move "postcode" reference to constants *@
    <label class="govuk-label govuk-label--m" for=@Model.Element.GetCustomItemId(AddressConstants.POSTCODE)>@Model.Element.Properties.PostcodeLabel
        @if (Model.Element.Properties.Optional)
        {
            <span>(optional)</span>
        }
    </label>

    <partial name="Hint" model=@Model.Element />

    <partial name="Error" model=@Model.Element />

    @Html.TextBox(Model.Element.GetCustomItemId(AddressConstants.POSTCODE), Model.Element.Properties.Value, elementProperties)
</div>
