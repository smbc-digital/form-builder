@using form_builder.Helpers
@model form_builder.Models.Element
@{
    var hintId = $"{Model.Properties.QuestionId}-hint";
    var errorId = $"{Model.Properties.QuestionId}-error";
}


@await Html.BeginFieldSet(Model)
    <legend>
        <label @Model.WriteOptional()>@Model.Properties.Label</label>
        @if (Model.Properties?.Optional ?? true)
        {
            <p class="optional">(optional)</p>
        }
    </legend>


    @if (!string.IsNullOrEmpty(Model.Properties.Hint))
    {
        <p id=@hintId>@Html.Raw(Model.Properties.Hint)</p>
    }

    <div class="input">
        <partial name="CheckboxOptions" />

        @if (!Model.IsValid)
        {
            {
                var validationMessage = string.IsNullOrEmpty(Model.Properties.CustomValidationMessage) ? Model.ValidationMessage : Model.Properties.CustomValidationMessage;

                <p class="input-error-content" id="@errorId">@validationMessage</p>
            }
        }
    </div>

@await Html.EndFieldSet()