@using form_builder.Constants
@model form_builder.Models.Elements.MultipleFileUpload
@{
    var sizeValidationError = $"{Model.QuestionId}-fileSizeError";
    var elements = Model.GenerateElementProperties();
    elements.Add("class", "govuk-file-upload govuk-!-margin-bottom-9 govuk-!-display-block");
    var uploadButtonClasses = Model.FileUpload.Any() ? "govuk-button govuk-button--secondary" : "govuk-button";
}

    <div class="govuk-form-group @(!Model.IsValid ? "govuk-form-group--error" : string.Empty)">

        <partial name="LabelH1" />
        
        <partial name="InsetText" model="@Model.Properties.IAG" />

        <partial name="Hint" />

        <partial name="Error" />

        @if (Model.FileUpload.Count > 0)
        {
            <label class="govuk-label govuk-label--s">Files uploaded</label>
            <br />
        }

        <table style="width:80%;">
            @foreach (var file in Model.FileUpload)
            {
                <tr>
                    <th>
                        <label class="govuk-label" style="text-align:left;">@file</label>
                    </th>
                    <th>
                        <button type="submit" name="@FileUploadConstants.FileToDelete" value="@file"
                                formaction="Index" formmethod="post" style=" background: none !important; border: none; padding: 0 !important; color: #069; text-decoration: underline; cursor: pointer;">
                            Delete
                        </button>
                    </th>
                </tr>
            }
        </table>
        <br />

        @Html.TextBox(Model.QuestionId, Model.Properties.Value, elements)

        <button data-prevent-double-click="true"
                @(Model.Properties.DisableOnClick ? "data-disable-on-click=true" : string.Empty)
                class="@uploadButtonClasses"
                id="upload"
                data-module="govuk-button">
            Upload file(s)
        </button>
    </div>