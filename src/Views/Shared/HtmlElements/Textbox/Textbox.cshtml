@model Element
@{
    var elements = Model.GenerateElementProperties();
    var baseCssClasses = "govuk-input";

    switch (Model.Properties.Width)
    {
        case ESize.Small:
            baseCssClasses += " govuk-input--width-3";
            break;

        case ESize.Medium:
            baseCssClasses += " govuk-input--width-5";
            break;

        case ESize.Large:
            baseCssClasses += " govuk-input--width-10";
            break;

        case ESize.ExtraLarge:
            baseCssClasses += " govuk-input--width-20";
            break;
    }

    elements.Add("class", !Model.IsValid
        ? $"{baseCssClasses} govuk-input--error"
        : baseCssClasses);
}

<div class="govuk-form-group @(!Model.IsValid ? "govuk-form-group--error" : string.Empty)">

    <partial name="LabelH1" />

    <partial name="InsetText" model="Model.Properties.IAG" />

    <partial name="Hint" />

    <partial name="Error" />

    @Html.TextBox($"{Model.QuestionId}[{Model.Properties.QuestionIdIncrement}]", Model.Properties.Value, elements)
</div>