@model Textbox
@{
    var elements = Model.GenerateElementProperties();
    var baseCssClasses = "govuk-input";

    switch (Model.Properties.Width)
    {
        case ESize.Small:
            baseCssClasses += " govuk-input--width-3";
            break;

        case ESize.Medium:
            baseCssClasses += " govuk-input--width-5";
            break;

        case ESize.Large:
            baseCssClasses += " govuk-input--width-10";
            break;

        case ESize.ExtraLarge:
            baseCssClasses += " govuk-input--width-20";
            break;
    }

    elements.Add("class", !Model.IsValid
    ? $"{baseCssClasses} govuk-input--error"
    : baseCssClasses);

    if (Model.Properties.Autofocus)
        elements.Add("autofocus", true);
}

<div class="govuk-form-group @(!Model.IsValid ? "govuk-form-group--error" : string.Empty)">

    <partial name="LabelH1" />

    <partial name="WarningText" />

    <partial name="InsetText" model="Model.Properties.IAG" />

    <partial name="Hint" />

    <partial name="Error" />

        <div class="govuk-input__wrapper">

        @if (Model.HasPrefix)
        {
            <div class="govuk-input__prefix" aria-hidden="true">@Model.Properties.Prefix</div>
        }

        @Html.TextBox(Model.QuestionId, Model.Properties.Value, elements)

        @if (Model.HasSuffix)
        {
           <div class="govuk-input__suffix" aria-hidden="true">@Html.Raw(Model.Properties.Suffix)</div>
        }

       </div>

    </div>
