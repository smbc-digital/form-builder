@using form_builder.Helpers
@model form_builder.Models.Element
@{
    var hintId = $"{Model.Properties.QuestionId}-hint";

    var dayId = $"{Model.Properties.QuestionId}-day";
    var monthId = $"{Model.Properties.QuestionId}-month";
    var yearId = $"{Model.Properties.QuestionId}-year";

    var errorId = $"{Model.Properties.QuestionId}-error";
}

@*<fieldset class="input-memorable-date" aria-describedby="@hintId @(!Model.IsValid ? errorId : String.Empty)">*@
@await Html.BeginFieldSet(Model, "input-memorable-date")
<legend>
    <label @Model.WriteOptional()>@Model.Properties.Label</label>
    @if (Model.Properties?.Optional ?? true)
    {
        <p class="optional">(optional)</p>
    }
</legend>
<p id="@hintId">@Model.Properties.Hint</p>
<div>
    <label for="@dayId">
        Day
    </label>
    <input id="@dayId" name="@dayId" type="text" maxlength="2" />
</div>
<div>
    <label for="@monthId">
        Month
    </label>
    <input id="@monthId" name="@monthId" type="text" maxlength="2" />
</div>
<div>
    <label for="@yearId">
        Year
    </label>
    <input id="@yearId" name="@yearId" type="text" maxlength="4" />
</div>

@if (!Model.IsValid)
{
    //var validationMessage = string.IsNullOrEmpty(Model.Properties.CustomValidationMessage) ? Model.ValidationMessage : Model.Properties.CustomValidationMessage;
    var validationMessage = Model.ValidationMessage;
    <p class="input-error-content" id="@errorId">@validationMessage</p>
}
@await Html.EndFieldSet()
@*</fieldset>*@