using System.Text.RegularExpressions;
using Newtonsoft.Json;
using NJsonSchema.CodeGeneration.CSharp;

namespace form_builder.ObjectGenerators;

public static class CSharpObjectGenerator
{
    public static string Generate(object dataStructure, string name)
    {
        string dataStructureString = JsonConvert.SerializeObject(dataStructure);
        var schema = NJsonSchema.JsonSchema.FromSampleJson(dataStructureString);
        DisableAdditionalProperties(schema);

        var settings = new CSharpGeneratorSettings
        {
            GenerateDataAnnotations = false,
            ClassStyle = CSharpClassStyle.Poco,
            GenerateNullableReferenceTypes = false,
            Namespace = "form_builder.Models"            
        };

        var generator = new CSharpGenerator(schema, settings);
        var cSharpObjectString = generator.GenerateFile($"{name}Model");
        
        return PostProcessObjectString(cSharpObjectString);
    }

    private static void DisableAdditionalProperties(NJsonSchema.JsonSchema schema)
    {
        if (schema == null)
            return;

        schema.AllowAdditionalProperties = false;
        schema.AllowAdditionalItems = false;

        foreach (var property in schema.Properties.Values)
        {
            DisableAdditionalProperties(property.ActualSchema);
        }

        foreach (var def in schema.Definitions.Values)
        {
            DisableAdditionalProperties(def);
        }
    }

    private static string PostProcessObjectString(string cSharpObjectString)
    {
        var processedCSharpObjectString = cSharpObjectString.Replace("//----------------------", "");
        processedCSharpObjectString = processedCSharpObjectString.Replace("// <auto-generated>", "");
        processedCSharpObjectString = processedCSharpObjectString.Replace("//     Generated using the NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)", "");
        processedCSharpObjectString = processedCSharpObjectString.Replace("// </auto-generated>", "");
        processedCSharpObjectString = processedCSharpObjectString.Replace("//----------------------", "");
        processedCSharpObjectString = processedCSharpObjectString.Replace("#pragma warning disable // Disable all warnings", "");
        processedCSharpObjectString = Regex.Replace(processedCSharpObjectString, @"\[(.*?)\]", "");
        processedCSharpObjectString = processedCSharpObjectString.Trim();
        processedCSharpObjectString = processedCSharpObjectString.Replace("\n\n\n", "\n");
        processedCSharpObjectString = processedCSharpObjectString.Replace("\n\n", "\n");
        processedCSharpObjectString = processedCSharpObjectString.Replace("{\n", "{");

        return processedCSharpObjectString;
    }
}